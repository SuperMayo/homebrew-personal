From 6a534f582f3b7815303d13d73afb113de05639e0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Sidney=20San=20Marti=CC=81n?= <sidney@s4y.us>
Date: Wed, 2 Oct 2019 09:55:38 -0400
Subject: [PATCH] Fix building with Xcode 11

Two changes:
1. Switch PSMTabBarCell from accessing NSCell's _controlView ivar, which
   is gone, to accessing its controlView property. Also override the
   controlView property to be a PSMTabBarControl instead of an NSView.
2. Move macvim-askpass from MacOS to Resources to not confuse codesign.

Fixes #936.
---
 src/MacVim/MacVim.xcodeproj/project.pbxproj   |  2 +-
 .../PSMTabBarControl/source/PSMTabBarCell.h   |  4 +-
 .../PSMTabBarControl/source/PSMTabBarCell.m   | 46 ++++++++-----------
 src/MacVim/gvimrc                             |  2 +-
 4 files changed, 22 insertions(+), 32 deletions(-)

diff --git a/src/MacVim/MacVim.xcodeproj/project.pbxproj b/src/MacVim/MacVim.xcodeproj/project.pbxproj
index e519018de..292751011 100644
--- a/src/MacVim/MacVim.xcodeproj/project.pbxproj
+++ b/src/MacVim/MacVim.xcodeproj/project.pbxproj
@@ -157,7 +157,7 @@
 			isa = PBXCopyFilesBuildPhase;
 			buildActionMask = 2147483647;
 			dstPath = "";
-			dstSubfolderSpec = 6;
+			dstSubfolderSpec = 7;
 			files = (
 				528DA66A1426D4F9003380F1 /* macvim-askpass in Copy Scripts */,
 			);
diff --git a/src/MacVim/PSMTabBarControl/source/PSMTabBarCell.h b/src/MacVim/PSMTabBarControl/source/PSMTabBarCell.h
index d51163196..4c28ffc83 100644
--- a/src/MacVim/PSMTabBarControl/source/PSMTabBarCell.h
+++ b/src/MacVim/PSMTabBarControl/source/PSMTabBarCell.h
@@ -34,14 +34,14 @@
     NSString            *_toolTip;
 }
 
+@property(assign) PSMTabBarControl* controlView;
+
 // creation/destruction
 - (id)initWithControlView:(PSMTabBarControl *)controlView;
 - (id)initPlaceholderWithFrame:(NSRect)frame expanded:(BOOL)value inControlView:(PSMTabBarControl *)controlView;
 - (void)dealloc;
 
 // accessors
-- (id)controlView;
-- (void)setControlView:(id)view;
 - (NSTrackingRectTag)closeButtonTrackingTag;
 - (void)setCloseButtonTrackingTag:(NSTrackingRectTag)tag;
 - (NSTrackingRectTag)cellTrackingTag;
diff --git a/src/MacVim/PSMTabBarControl/source/PSMTabBarCell.m b/src/MacVim/PSMTabBarControl/source/PSMTabBarCell.m
index 6f1a06e46..9642ba704 100644
--- a/src/MacVim/PSMTabBarControl/source/PSMTabBarCell.m
+++ b/src/MacVim/PSMTabBarControl/source/PSMTabBarCell.m
@@ -14,6 +14,7 @@
 
 
 @implementation PSMTabBarCell
+@dynamic controlView;
 
 #pragma mark -
 #pragma mark Creation/Destruction
@@ -21,7 +22,7 @@ - (id)initWithControlView:(PSMTabBarControl *)controlView
 {
     self = [super init];
     if(self){
-        _controlView = controlView;
+        self.controlView = controlView;
         _closeButtonTrackingTag = 0;
         _cellTrackingTag = 0;
         _closeButtonOver = NO;
@@ -41,7 +42,7 @@ - (id)initPlaceholderWithFrame:(NSRect)frame expanded:(BOOL)value inControlView:
 {
     self = [super init];
     if(self){
-        _controlView = controlView;
+        self.controlView = controlView;
         _isPlaceholder = YES;
         if(!value)
             frame.size.width = 0.0;
@@ -76,17 +77,6 @@ - (void)dealloc
 #pragma mark -
 #pragma mark Accessors
 
-- (id)controlView
-{
-    return _controlView;
-}
-
-- (void)setControlView:(id)view
-{
-    // no retain release pattern, as this simply switches a tab to another view.
-    _controlView = view;
-}
-
 - (NSTrackingRectTag)closeButtonTrackingTag
 {
     return _closeButtonTrackingTag;
@@ -127,7 +117,7 @@ - (void)setStringValue:(NSString *)aString
     [super setStringValue:aString];
     _stringSize = [[self attributedStringValue] size];
     // need to redisplay now - binding observation was too quick.
-    [_controlView update];
+    [self.controlView update];
 }
 
 - (NSSize)stringSize
@@ -137,7 +127,7 @@ - (NSSize)stringSize
 
 - (NSAttributedString *)attributedStringValue
 {
-    return [[_controlView psmTabStyle] attributedStringValueForTabCell:self];
+    return [[self.controlView psmTabStyle] attributedStringValueForTabCell:self];
 }
 
 - (int)tabState
@@ -213,7 +203,7 @@ - (BOOL)hasIcon
 - (void)setHasIcon:(BOOL)value
 {
     _hasIcon = value;
-    [_controlView update]; // binding notice is too fast
+    [self.controlView update]; // binding notice is too fast
 }
 
 - (int)count
@@ -224,7 +214,7 @@ - (int)count
 - (void)setCount:(int)value
 {
     _count = value;
-    [_controlView update]; // binding notice is too fast
+    [self.controlView update]; // binding notice is too fast
 }
 
 - (BOOL)isPlaceholder
@@ -271,22 +261,22 @@ - (void)setToolTip:(NSString *)tip
 
 - (NSRect)indicatorRectForFrame:(NSRect)cellFrame
 {
-    return [[_controlView psmTabStyle] indicatorRectForTabCell:self];
+    return [[self.controlView psmTabStyle] indicatorRectForTabCell:self];
 }
 
 - (NSRect)closeButtonRectForFrame:(NSRect)cellFrame
 {
-    return [[_controlView psmTabStyle] closeButtonRectForTabCell:self];
+    return [[self.controlView psmTabStyle] closeButtonRectForTabCell:self];
 }
 
 - (float)minimumWidthOfCell
 {
-    return [[_controlView psmTabStyle] minimumWidthOfTabCell:self];
+    return [[self.controlView psmTabStyle] minimumWidthOfTabCell:self];
 }
 
 - (float)desiredWidthOfCell
 {
-    return [[_controlView psmTabStyle] desiredWidthOfTabCell:self];
+    return [[self.controlView psmTabStyle] desiredWidthOfTabCell:self];
 }  
 
 #pragma mark -
@@ -300,7 +290,7 @@ - (void)drawWithFrame:(NSRect)cellFrame inView:(NSView *)controlView
         return;
     }
     
-    [[_controlView psmTabStyle] drawTabCell:self];
+    [[self.controlView psmTabStyle] drawTabCell:self];
 }
 
 #pragma mark -
@@ -315,7 +305,7 @@ - (void)mouseEntered:(NSEvent *)theEvent
     if([theEvent trackingNumber] == _cellTrackingTag){
         [self setHighlighted:YES];
     }
-    [_controlView setNeedsDisplay];
+    [self.controlView setNeedsDisplay];
 }
 
 - (void)mouseExited:(NSEvent *)theEvent
@@ -327,7 +317,7 @@ - (void)mouseExited:(NSEvent *)theEvent
     if([theEvent trackingNumber] == _cellTrackingTag){
         [self setHighlighted:NO];
     }
-    [_controlView setNeedsDisplay];
+    [self.controlView setNeedsDisplay];
 }
 
 #pragma mark -
@@ -335,14 +325,14 @@ - (void)mouseExited:(NSEvent *)theEvent
 
 - (NSImage*)dragImageForRect:(NSRect)cellFrame
 {
-    if(([self state] == NSOnState) && ([[_controlView styleName] isEqualToString:@"Metal"]))
+    if(([self state] == NSOnState) && ([[self.controlView styleName] isEqualToString:@"Metal"]))
         cellFrame.size.width += 1.0;
-    [_controlView lockFocus];
+    [self.controlView lockFocus];
 
     NSBitmapImageRep *rep = [[self controlView] bitmapImageRepForCachingDisplayInRect:cellFrame];
     [[self controlView] cacheDisplayInRect:cellFrame toBitmapImageRep:rep];
 
-    [_controlView unlockFocus];
+    [self.controlView unlockFocus];
     NSImage *image = [[[NSImage alloc] initWithSize:[rep size]] autorelease];
     [image addRepresentation:rep];
     NSImage *returnImage = [[[NSImage alloc] initWithSize:[rep size]] autorelease];
@@ -353,7 +343,7 @@ - (NSImage*)dragImageForRect:(NSRect)cellFrame
         NSImage *pi = [[NSImage alloc] initByReferencingFile:[[PSMTabBarControl bundle] pathForImageResource:@"pi"]];
         [returnImage lockFocus];
         NSPoint indicatorPoint = NSMakePoint([self frame].size.width - MARGIN_X - kPSMTabBarIndicatorWidth, MARGIN_Y);
-        if(([self state] == NSOnState) && ([[_controlView styleName] isEqualToString:@"Metal"]))
+        if(([self state] == NSOnState) && ([[self.controlView styleName] isEqualToString:@"Metal"]))
             indicatorPoint.y += 1.0;
         [pi drawAtPoint:indicatorPoint fromRect:NSZeroRect operation:NSCompositingOperationSourceOver fraction:0.7];
         [returnImage unlockFocus];
diff --git a/src/MacVim/gvimrc b/src/MacVim/gvimrc
index 2d42b2394..20150308e 100644
--- a/src/MacVim/gvimrc
+++ b/src/MacVim/gvimrc
@@ -37,7 +37,7 @@ endif
 set printexpr=system('open\ -a\ Preview\ '.v:fname_in)\ +\ v:shell_error
 
 " askpass
-let $SSH_ASKPASS = simplify($VIM . '/../../MacOS') . '/macvim-askpass'
+let $SSH_ASKPASS = simplify($VIM . '/../../Resources') . '/macvim-askpass'
 let $SUDO_ASKPASS = $SSH_ASKPASS
 
 
